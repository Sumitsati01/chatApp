{"ast":null,"code":"var _jsxFileName = \"/home/user/React/git/chat/src/components/Input.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport Upload from '../img/upload-image-2.webp';\nimport Attach from '../img/attach.png';\nimport { arrayUnion, doc, serverTimestamp, Timestamp, updateDoc } from 'firebase/firestore';\nimport { db, storage } from '../Pages/Firebase';\nimport { v4 as uuid } from 'uuid';\nimport { AuthContext } from '../context/authContext';\nimport { ChatContext } from '../context/chatContext';\nimport { getDownloadURL, ref, uploadBytesResumable } from 'firebase/storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Input() {\n  _s();\n\n  const [text, setText] = useState(\"\");\n  const [img, setImg] = useState(null);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    data\n  } = useContext(ChatContext);\n\n  const handleSend = async () => {\n    if (img) {\n      const storageRef = ref(storage, uuid());\n      const uploadTask = await uploadBytesResumable(storageRef, img); //console.log(uploadTask)\n\n      uploadTask.on(error => {}, () => {\n        getDownloadURL(uploadTask.snapshot.ref).then(async downloadURL => {\n          await updateDoc(doc(db, \"chats\", data.chatID), {\n            messages: arrayUnion({\n              id: uuid(),\n              text,\n              senderId: currentUser.uid,\n              date: Timestamp.now(),\n              img: downloadURL\n            })\n          });\n        });\n      });\n    } else {\n      await updateDoc(doc(db, 'chats', data.chatID), {\n        messages: arrayUnion({\n          id: uuid(),\n          text,\n          senderID: currentUser.uid,\n          Date: Timestamp.now()\n        })\n      });\n    }\n\n    await updateDoc(doc(db, 'userChats', currentUser.uid), {\n      [data.chatID + \".lastMessage\"]: {\n        text\n      },\n      [data.chatID + \".date\"]: serverTimestamp()\n    });\n    await updateDoc(doc(db, 'userChats', data.user.uid), {\n      [data.chatID + \".lastMessage\"]: {\n        text\n      },\n      [data.chatID + \".date\"]: serverTimestamp()\n    });\n    setText(\"\");\n    setImg(null);\n  }; // Key Down\n\n\n  const handleKeyDownn = async e => {\n    if (e.key === 'Enter') {\n      if (img) {\n        const storageRef = ref(storage, uuid());\n        const uploadTask = await uploadBytesResumable(storageRef, img); //console.log(uploadTask)\n\n        uploadTask.on(error => {}, () => {\n          getDownloadURL(uploadTask.snapshot.ref).then(async downloadURL => {\n            await updateDoc(doc(db, \"chats\", data.chatID), {\n              messages: arrayUnion({\n                id: uuid(),\n                text,\n                senderId: currentUser.uid,\n                date: Timestamp.now(),\n                img: downloadURL\n              })\n            });\n          });\n        });\n      } else {\n        await updateDoc(doc(db, 'chats', data.chatID), {\n          messages: arrayUnion({\n            id: uuid(),\n            text,\n            senderID: currentUser.uid,\n            Date: Timestamp.now()\n          })\n        });\n      }\n\n      await updateDoc(doc(db, 'userChats', currentUser.uid), {\n        [data.chatID + \".lastMessage\"]: {\n          text\n        },\n        [data.chatID + \".date\"]: serverTimestamp()\n      });\n      await updateDoc(doc(db, 'userChats', data.user.uid), {\n        [data.chatID + \".lastMessage\"]: {\n          text\n        },\n        [data.chatID + \".date\"]: serverTimestamp()\n      });\n      setText(\"\");\n      setImg(null);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type Something Here....\",\n      onChange: e => setText(e.target.value),\n      onKeyDown: handleKeyDownn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"send\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Attach,\n        alt: \"attach\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        style: {\n          display: 'none'\n        },\n        id: \"file\",\n        onChange: e => setImg(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Upload,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Input, \"q//4GW5ClIVGNoMS/xADfe+Jtn4=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","useContext","useState","Upload","Attach","arrayUnion","doc","serverTimestamp","Timestamp","updateDoc","db","storage","v4","uuid","AuthContext","ChatContext","getDownloadURL","ref","uploadBytesResumable","Input","text","setText","img","setImg","currentUser","data","handleSend","storageRef","uploadTask","on","error","snapshot","then","downloadURL","chatID","messages","id","senderId","uid","date","now","senderID","Date","user","handleKeyDownn","e","key","target","value","display","files"],"sources":["/home/user/React/git/chat/src/components/Input.jsx"],"sourcesContent":["import React, { useContext, useState } from 'react'\nimport Upload from '../img/upload-image-2.webp'\nimport Attach from '../img/attach.png'\nimport {  arrayUnion, doc, serverTimestamp, Timestamp, updateDoc } from 'firebase/firestore';\nimport { db, storage } from '../Pages/Firebase';\nimport { v4 as uuid } from 'uuid';\nimport { AuthContext } from '../context/authContext';\nimport { ChatContext } from '../context/chatContext';\nimport { getDownloadURL, ref, uploadBytesResumable } from 'firebase/storage';\n\nfunction Input() {\n  const [text,setText]=useState(\"\");\n  const [img,setImg]=useState(null)\n\n  const {currentUser} =useContext(AuthContext)\n  const {data}=useContext(ChatContext);\n\n  const handleSend= async ()=>{\n    if(img){\n      const storageRef = ref(storage,uuid());\n      const uploadTask=await uploadBytesResumable(storageRef, img);\n      //console.log(uploadTask)\n      uploadTask.on(\n        (error) => {\n\n        },\n        () => {\n          \n          getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n            await updateDoc(doc(db, \"chats\", data.chatID), {\n              messages: arrayUnion({\n                id: uuid(),\n                text,\n                senderId: currentUser.uid,\n                date: Timestamp.now(),\n                img: downloadURL,\n              }),\n            });\n          });\n        }\n      );\n\n    }else{\n      await updateDoc(doc(db,'chats',data.chatID),{\n        messages:arrayUnion({\n          id:uuid(),\n          text,\n          senderID:currentUser.uid,\n          Date:Timestamp.now()\n        })\n      })\n    }\n\n  await updateDoc(doc(db,'userChats',currentUser.uid),{\n    [data.chatID + \".lastMessage\"]: {\n      text,\n    },\n    [data.chatID + \".date\"]: serverTimestamp(),\n  }\n  );\n  await updateDoc(doc(db,'userChats',data.user.uid),{\n    [data.chatID + \".lastMessage\"]: {\n      text,\n    },\n    [data.chatID + \".date\"]: serverTimestamp(),\n  }\n  );\n\n\n\n  setText(\"\");\n  setImg(null);\n  };\n\n// Key Down\n\nconst handleKeyDownn= async (e)=>{\n  if (e.key === 'Enter') {\n  if(img){\n    const storageRef = ref(storage,uuid());\n    const uploadTask=await uploadBytesResumable(storageRef, img);\n    //console.log(uploadTask)\n    uploadTask.on(\n      (error) => {\n\n      },\n      () => {\n        \n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          await updateDoc(doc(db, \"chats\", data.chatID), {\n            messages: arrayUnion({\n              id: uuid(),\n              text,\n              senderId: currentUser.uid,\n              date: Timestamp.now(),\n              img: downloadURL,\n            }),\n          });\n        });\n      }\n    );\n\n  }else{\n    await updateDoc(doc(db,'chats',data.chatID),{\n      messages:arrayUnion({\n        id:uuid(),\n        text,\n        senderID:currentUser.uid,\n        Date:Timestamp.now()\n      })\n    })\n  }\n\nawait updateDoc(doc(db,'userChats',currentUser.uid),{\n  [data.chatID + \".lastMessage\"]: {\n    text,\n  },\n  [data.chatID + \".date\"]: serverTimestamp(),\n}\n);\nawait updateDoc(doc(db,'userChats',data.user.uid),{\n  [data.chatID + \".lastMessage\"]: {\n    text,\n  },\n  [data.chatID + \".date\"]: serverTimestamp(),\n}\n);\n\n\n\nsetText(\"\");\nsetImg(null);\n  }\n};\n\n\n  return (\n    <div className='input'>\n      <input type='text' placeholder='Type Something Here....'\n         onChange={(e) => setText(e.target.value)} onKeyDown={handleKeyDownn}/>\n      <div className='send'>\n          <img src={Attach} alt=\"attach\" />\n          <input type=\"file\" style={{display:'none'}} id='file' onChange={(e)=>setImg(e.target.files[0])}/>\n          <label htmlFor=\"file\">\n            <img src={Upload} alt=\"\" />\n          </label>\n          <button onClick={handleSend}>Send</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Input\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}